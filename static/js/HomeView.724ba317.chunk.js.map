{"version":3,"file":"static/js/HomeView.724ba317.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-06-phonebook/./src/components/Button/Button.module.scss?f17a","components/Button/Button.js","webpack://goit-react-hw-06-phonebook/./src/components/CardOfMovie/CardOfMovie.module.scss?cb41","components/CardOfMovie/CardOfMovie.js","webpack://goit-react-hw-06-phonebook/./src/components/CardsOfMovies/CardsOfMovies.module.scss?9090","components/CardsOfMovies/CardsOfMovies.js","services/API.js","webpack://goit-react-hw-06-phonebook/./src/views/HomeView/HomeView.module.scss?f69f","views/HomeView/HomeView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\"};","import PropTypes from 'prop-types';\nimport s from './Button.module.scss';\n\nconst Button = ({ name, onClick, children }) => (\n  <button className={s.button} type=\"button\" name={name} onClick={onClick}>\n    {children}\n  </button>\n);\n\nexport default Button;\n\nButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CardOfMovie_item__y-dZW\",\"ratingWrap\":\"CardOfMovie_ratingWrap__2qhHX\",\"rating\":\"CardOfMovie_rating__71dn8\",\"textWrap\":\"CardOfMovie_textWrap__G3y47\",\"title\":\"CardOfMovie_title__w6JCQ\",\"date\":\"CardOfMovie_date__78QyJ\",\"poster\":\"CardOfMovie_poster__dhiI3\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './CardOfMovie.module.scss';\n\nconst CardOfMovie = ({\n  id,\n  title,\n  vote_average,\n  poster_path,\n  release_date,\n}) => {\n  const location = useLocation();\n\n  return (\n    <div className={s.item}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div className={s.ratingWrap}>\n          <span className={s.rating}>{vote_average}</span>\n        </div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNW08SIItZE3jSbsda_zoxn1T3jQpelOe4tQ&usqp=CAU'\n          }\n          alt={title}\n          className={s.poster}\n        />\n        <div className={s.textWrap}>\n          <p className={s.title}>{title}</p>\n          <p className={s.date}>({release_date})</p>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default CardOfMovie;\n\nCardOfMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  vote_average: PropTypes.number,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CardsOfMovies_list__leT9K\"};","import s from './CardsOfMovies.module.scss';\n\nconst CardsOfMovies = ({ children }) => <ul className={s.list}>{children}</ul>;\n\nexport default CardsOfMovies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '33bcb89e36b34d36b896a35a11214f25';\n\nasync function getMovies(url) {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(response.status));\n}\n\nexport function fetchTrendingMovies(page) {\n  return getMovies(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n}\n\nexport function fetchMoviesByID(id) {\n  return getMovies(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n}\n\nexport function fetchMoviesByQuery(query, page) {\n  return getMovies(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n}\n\nexport function fetchCredits(id) {\n  return getMovies(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n}\n\nexport function fetchReviews(id) {\n  return getMovies(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapButton\":\"HomeView_wrapButton__BK4sy\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchTrendingMovies } from 'services/API';\nimport CardsOfMovies from 'components/CardsOfMovies';\nimport CardOfMovie from 'components/CardOfMovie';\nimport Button from 'components/Button';\nimport s from './HomeView.module.scss';\n\nconst HomeView = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  let page = Number(searchParams.get('page')) || 1;\n\n  useEffect(() => {\n    fetchTrendingMovies(page).then(({ results }) => setMovies(results));\n  }, [page]);\n\n  const changePage = evt => {\n    switch (evt.currentTarget.name) {\n      case 'increment':\n        setSearchParams({ page: page + 1 });\n        break;\n      case 'decrement':\n        setSearchParams({ page: page - 1 || 1 });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    movies && (\n      <>\n        <div className={s.wrapButton}>\n          <Button name=\"decrement\" onClick={changePage}>\n            Previous Page\n          </Button>\n          <Button name=\"increment\" onClick={changePage}>\n            Next Page\n          </Button>\n        </div>\n        <CardsOfMovies>\n          {movies.map(\n            ({ id, title, vote_average, poster_path, release_date }) => (\n              <li key={id}>\n                <CardOfMovie\n                  id={id}\n                  title={title}\n                  vote_average={vote_average}\n                  poster_path={poster_path}\n                  release_date={release_date}\n                />\n              </li>\n            )\n          )}\n        </CardsOfMovies>\n      </>\n    )\n  );\n};\n\nexport default HomeView;\n"],"names":["name","onClick","children","className","s","type","id","title","vote_average","poster_path","release_date","location","useLocation","to","state","from","src","alt","BASE_URL","API_KEY","getMovies","url","fetch","response","ok","json","Promise","reject","Error","status","fetchTrendingMovies","page","fetchMoviesByID","fetchMoviesByQuery","query","fetchCredits","fetchReviews","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","Number","get","useEffect","then","results","changePage","evt","currentTarget","Button","CardsOfMovies","map","CardOfMovie"],"sourceRoot":""}