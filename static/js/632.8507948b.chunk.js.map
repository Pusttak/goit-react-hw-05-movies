{"version":3,"file":"static/js/632.8507948b.chunk.js","mappings":"sKACA,MAAyB,uB,SCQzB,EANe,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,SAAlB,OACb,mBAAQC,UAAWC,EAAUC,KAAK,SAASL,KAAMA,EAAMC,QAASA,EAAhE,SACGC,M,0ECJL,EAAuB,0BAAvB,EAA8D,gCAA9D,EAAuG,4BAAvG,EAA8I,8BAA9I,EAAoL,2BAApL,EAAsN,0BAAtN,EAAyP,4B,SCoCzP,EAjCoB,SAAC,GAMd,IALLI,EAKI,EALJA,GACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAKT,UAAWC,EAAhB,UACE,UAAC,KAAD,CAAMS,GAAE,kBAAaP,GAAMQ,MAAO,CAAEC,KAAMJ,GAA1C,WACE,gBAAKR,UAAWC,EAAhB,UACE,iBAAMD,UAAWC,EAAjB,SAA4BI,OAE9B,gBACEQ,IACEP,EAAW,yCAC2BA,GAClC,sGAENQ,IAAKV,EACLJ,UAAWC,KAEb,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAwBG,KACxB,eAAGJ,UAAWC,EAAd,cAAwBM,EAAxB,iB,oDC7BV,MAAuB,4B,SCGvB,EAFsB,SAAC,GAAD,IAAGR,EAAH,EAAGA,SAAH,OAAkB,eAAIC,UAAWC,EAAf,SAAwBF,M,oLCF1DgB,EAAW,+BACXC,EAAU,mCAAhB,SAEeC,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,uFACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,gCAGYD,EAASE,OAHrB,+CAIMC,QAAQC,OAAO,IAAIC,MAAML,EAASM,SAJxC,0GAOO,SAASC,EAAoBC,GAClC,OAAOX,EAAU,GAAD,OACXF,EADW,wCAC6BC,EAD7B,iBAC6CY,IAIxD,SAASC,EAAgB1B,GAC9B,OAAOc,EAAU,GAAD,OAAIF,EAAJ,kBAAsBZ,EAAtB,oBAAoCa,IAG/C,SAASc,EAAmBC,EAAOH,GACxC,OAAOX,EAAU,GAAD,OACXF,EADW,iCACsBC,EADtB,kBACuCe,EADvC,iBACqDH,IAIhE,SAASI,EAAa7B,GAC3B,OAAOc,EAAU,GAAD,OAAIF,EAAJ,kBAAsBZ,EAAtB,4BAA4Ca,IAGvD,SAASiB,EAAa9B,GAC3B,OAAOc,EAAU,GAAD,OAAIF,EAAJ,kBAAsBZ,EAAtB,4BAA4Ca,M,oBC/B/C,SAASkB,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eACjDM,EAAKM,KAAKC,MAAMP,EAAME,GAG7B,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,GACnDA,EAAI,EAAIb,EAAQL,OAAOqB,IAAS,GAAIC,SAAQ,SAAUxB,GACpD,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAChCE,OAAOuB,0BAA4BvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAAWhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GAC5JE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAI/E,OAAOmB,E,gHCxBT,EAAuB,yBAAvB,EAAwD,0BAAxD,EAA2F,2BAA3F,EAAmI,+B,SCuFnI,EAhFmB,WACjB,OAA4BQ,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMrC,EAAQoC,EAAaE,IAAI,UAAY,GACvCzC,EAAO0C,OAAOH,EAAaE,IAAI,UAAY,EACzCE,EAAS,CAAExC,MAAAA,EAAOH,KAAAA,IAExB4C,EAAAA,EAAAA,YAAU,WACJzC,IACFD,EAAAA,EAAAA,IAAmBC,EAAOH,GAAM6C,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBT,EAAUS,QAEjE,CAAC3C,EAAOH,IAEX,IASM+C,EAAa,SAAAC,GACjB,OAAQA,EAAIrB,OAAO1D,MACjB,IAAK,YACHuE,EAAgB,OAAKG,GAAN,IAAc3C,KAAMA,EAAO,KAC1C,MACF,IAAK,YACHwC,EAAgB,OAAKG,GAAN,IAAc3C,KAAMA,EAAO,GAAK,OAQrD,OACE,iCACE,kBAAM5B,UAAWC,EAAQ4E,SAzBP,SAAAD,GACpBA,EAAIE,iBACJ,IAAMC,EAAOH,EAAII,cACbD,EAAKE,OAAO5C,QACd+B,EAAgB,OAAKG,GAAN,IAAcxC,MAAOgD,EAAKE,OAAO5C,SAChD0C,EAAKG,UAoBL,WACE,kBACElF,UAAWC,EACXJ,KAAK,SACLK,KAAK,OACLiF,aAAa,SAEf,mBAAQnF,UAAWC,EAAUC,KAAK,SAAlC,uBAID8D,IACC,iCACE,iBAAKhE,UAAWC,EAAhB,WACE,SAACmF,EAAA,EAAD,CAAQvF,KAAK,YAAYC,QAAS6E,EAAlC,4BAGA,SAACS,EAAA,EAAD,CAAQvF,KAAK,YAAYC,QAAS6E,EAAlC,2BAIF,SAACU,EAAA,EAAD,UACGrB,EAAOsB,KACN,gBAAGnF,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,YAAaC,EAAzC,EAAyCA,aAAzC,OACE,yBACE,SAACgF,EAAA,EAAD,CACEpF,GAAIA,EACJC,MAAOA,EACPC,aAAcA,EACdC,YAAaA,EACbC,aAAcA,KANTJ","sources":["webpack://goit-react-hw-05-movies/./src/components/Button/Button.module.scss?f17a","components/Button/Button.js","webpack://goit-react-hw-05-movies/./src/components/CardOfMovie/CardOfMovie.module.scss?cb41","components/CardOfMovie/CardOfMovie.js","webpack://goit-react-hw-05-movies/./src/components/CardsOfMovies/CardsOfMovies.module.scss?9090","components/CardsOfMovies/CardsOfMovies.js","services/API.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://goit-react-hw-05-movies/./src/views/MoviesView/MoviesView.module.scss?8237","views/MoviesView/MoviesView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\"};","import PropTypes from 'prop-types';\nimport s from './Button.module.scss';\n\nconst Button = ({ name, onClick, children }) => (\n  <button className={s.button} type=\"button\" name={name} onClick={onClick}>\n    {children}\n  </button>\n);\n\nexport default Button;\n\nButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CardOfMovie_item__y-dZW\",\"ratingWrap\":\"CardOfMovie_ratingWrap__2qhHX\",\"rating\":\"CardOfMovie_rating__71dn8\",\"textWrap\":\"CardOfMovie_textWrap__G3y47\",\"title\":\"CardOfMovie_title__w6JCQ\",\"date\":\"CardOfMovie_date__78QyJ\",\"poster\":\"CardOfMovie_poster__dhiI3\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './CardOfMovie.module.scss';\n\nconst CardOfMovie = ({\n  id,\n  title,\n  vote_average,\n  poster_path,\n  release_date,\n}) => {\n  const location = useLocation();\n\n  return (\n    <div className={s.item}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div className={s.ratingWrap}>\n          <span className={s.rating}>{vote_average}</span>\n        </div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNW08SIItZE3jSbsda_zoxn1T3jQpelOe4tQ&usqp=CAU'\n          }\n          alt={title}\n          className={s.poster}\n        />\n        <div className={s.textWrap}>\n          <p className={s.title}>{title}</p>\n          <p className={s.date}>({release_date})</p>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default CardOfMovie;\n\nCardOfMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  vote_average: PropTypes.number,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CardsOfMovies_list__leT9K\"};","import s from './CardsOfMovies.module.scss';\n\nconst CardsOfMovies = ({ children }) => <ul className={s.list}>{children}</ul>;\n\nexport default CardsOfMovies;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '33bcb89e36b34d36b896a35a11214f25';\n\nasync function getMovies(url) {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(response.status));\n}\n\nexport function fetchTrendingMovies(page) {\n  return getMovies(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n}\n\nexport function fetchMoviesByID(id) {\n  return getMovies(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n}\n\nexport function fetchMoviesByQuery(query, page) {\n  return getMovies(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n}\n\nexport function fetchCredits(id) {\n  return getMovies(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n}\n\nexport function fetchReviews(id) {\n  return getMovies(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesView_form__cbBrz\",\"input\":\"MoviesView_input__oa+eT\",\"button\":\"MoviesView_button__I5T7o\",\"wrapButton\":\"MoviesView_wrapButton__VP0YK\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'services/API';\nimport CardsOfMovies from 'components/CardsOfMovies';\nimport CardOfMovie from 'components/CardOfMovie';\nimport Button from 'components/Button';\nimport s from './MoviesView.module.scss';\n\nconst MoviesView = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  let page = Number(searchParams.get('page')) || 1;\n  const params = { query, page };\n\n  useEffect(() => {\n    if (query) {\n      fetchMoviesByQuery(query, page).then(({ results }) => setMovies(results));\n    }\n  }, [query, page]);\n\n  const handlerSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    if (form.search.value) {\n      setSearchParams({ ...params, query: form.search.value });\n      form.reset();\n    }\n  };\n\n  const changePage = evt => {\n    switch (evt.target.name) {\n      case 'increment':\n        setSearchParams({ ...params, page: page + 1 });\n        break;\n      case 'decrement':\n        setSearchParams({ ...params, page: page - 1 || 1 });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={handlerSubmit}>\n        <input\n          className={s.input}\n          name=\"search\"\n          type=\"text\"\n          autoComplete=\"off\"\n        />\n        <button className={s.button} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {movies && (\n        <>\n          <div className={s.wrapButton}>\n            <Button name=\"decrement\" onClick={changePage}>\n              Previous Page\n            </Button>\n            <Button name=\"increment\" onClick={changePage}>\n              Next Page\n            </Button>\n          </div>\n          <CardsOfMovies>\n            {movies.map(\n              ({ id, title, vote_average, poster_path, release_date }) => (\n                <li key={id}>\n                  <CardOfMovie\n                    id={id}\n                    title={title}\n                    vote_average={vote_average}\n                    poster_path={poster_path}\n                    release_date={release_date}\n                  />\n                </li>\n              )\n            )}\n          </CardsOfMovies>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MoviesView;\n"],"names":["name","onClick","children","className","s","type","id","title","vote_average","poster_path","release_date","location","useLocation","to","state","from","src","alt","BASE_URL","API_KEY","getMovies","url","fetch","response","ok","json","Promise","reject","Error","status","fetchTrendingMovies","page","fetchMoviesByID","fetchMoviesByQuery","query","fetchCredits","fetchReviews","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","Number","params","useEffect","then","results","changePage","evt","onSubmit","preventDefault","form","currentTarget","search","reset","autoComplete","Button","CardsOfMovies","map","CardOfMovie"],"sourceRoot":""}